/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test1;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ASUS
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public static String nameArea;
    public NewJFrame() {
        initComponents();
        Area ar = new Area();
        nameArea = ar.getNameArea();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SEARCH = new javax.swing.JTextField();
        SEARCHBUTTOM = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        STATISTIC = new javax.swing.JButton();
        PRINT = new javax.swing.JButton();
        EX = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Search : ");

        SEARCHBUTTOM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SEARCHBUTTOM.setText("SEARCH");
        SEARCHBUTTOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHBUTTOMActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "DATE", "LOCATION", "SIM", "HOME NETWORK", "PHONE"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        STATISTIC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        STATISTIC.setText("Statistic");
        STATISTIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STATISTICActionPerformed(evt);
            }
        });

        PRINT.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        PRINT.setText("Print");
        PRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRINTActionPerformed(evt);
            }
        });

        EX.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EX.setText("Ex");
        EX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(SEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(SEARCHBUTTOM)
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(PRINT, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144)
                .addComponent(STATISTIC, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EX)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SEARCHBUTTOM, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PRINT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(STATISTIC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EX)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRINTActionPerformed
        new ContactDAO().getQueryResultV2(nameArea);
        loadDataSet();
    }//GEN-LAST:event_PRINTActionPerformed

    private void STATISTICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STATISTICActionPerformed
            String url = "jdbc:sqlserver://localhost:1433;databaseName=test;integratedSecurity=true;" + "encrypt=true;trustServerCertificate=true";
    String query = "SELECT sim, COUNT(*) AS contact_count FROM Contacts WHERE location='"+nameArea+"'GROUP BY sim";
    String user = "sa";
    String password = "nam42160";

    try (Connection connection = DriverManager.getConnection(url, user, password);
         Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         ResultSet resultSet = statement.executeQuery(query)) {

        resultSet.last();
        int rowCount = resultSet.getRow();
        resultSet.beforeFirst();

        String[] simTypes = new String[rowCount];
        int[] contactCounts = new int[rowCount];
        int index = 0;

        while (resultSet.next()) {
            simTypes[index] = resultSet.getString("sim");
            contactCounts[index] = resultSet.getInt("contact_count");
            index++;
        }

        LineChartWithDatabase chart = new LineChartWithDatabase(simTypes, contactCounts);
        JFrame frame = new JFrame("statistic sim");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(600, 400);
        frame.add(chart);
        frame.setVisible(true);

    } catch (SQLException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_STATISTICActionPerformed

    private void SEARCHBUTTOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHBUTTOMActionPerformed
        if (SEARCH.getText().equals(""))
            JOptionPane.showMessageDialog(this, "Please enter all the required details.");
        else {
           loadSearchData(SEARCH.getText());
        }
    }//GEN-LAST:event_SEARCHBUTTOMActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void EXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXActionPerformed
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = workbook.createSheet("Trang 1");

            XSSFRow row = null;
            Cell cell = null;

            row = spreadsheet.createRow((short) 2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH BẠ ĐIỆN THOẠI");

            row = spreadsheet.createRow((short) 3);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Name");
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Date");
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Location");
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Sim");
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Home Network");
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Phone");
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("STS");

                String url = "jdbc:sqlserver://localhost:1433;databaseName=test;integratedSecurity=true;" + "encrypt=true;trustServerCertificate=true";
                String user = "sa";
                String password = "nam42160";

            try (Connection connection = DriverManager.getConnection(url, user, password)) {
                String query = "SELECT * FROM Contacts WHERE location ='"+nameArea+"'";
                PreparedStatement statement = connection.prepareStatement(query);
                ResultSet resultSet = statement.executeQuery();

                int rowNumber = 4;
                while (resultSet.next()) {
                    row = spreadsheet.createRow((short) rowNumber++);
                    row.setHeight((short) 400);
                    String name = resultSet.getString("name");
                    String date = resultSet.getString("date");
                    String location = resultSet.getString("location");
                    String sim = resultSet.getString("sim");
                    String homenetwork = resultSet.getString("homenetwork");
                    String phone = resultSet.getString("phone");
                    int sts = resultSet.getInt("sts");
                    row.createCell(0).setCellValue(name);
                    row.createCell(1).setCellValue(date);
                    row.createCell(2).setCellValue(location);
                    row.createCell(3).setCellValue(sim);
                    row.createCell(4).setCellValue(homenetwork);
                    row.createCell(5).setCellValue(phone);
                    row.createCell(6).setCellValue(sts);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            FileOutputStream out = new FileOutputStream(new File("D:\\test\\"+nameArea+".xlsx"));
            workbook.write(out);
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
        }                                 
    }//GEN-LAST:event_EXActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    private void loadDataSet() {
        try {
            ContactDAO ContactDAO = new ContactDAO();
            jTable1.setModel(ContactDAO.buildTableModel(ContactDAO.getQueryResultV2(nameArea)));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void loadSearchData(String text) {
         try {
            ContactDAO ContactDAO = new ContactDAO();
            jTable1.setModel(ContactDAO.buildTableModel(ContactDAO.getContactSearch(text)));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EX;
    private javax.swing.JButton PRINT;
    private javax.swing.JTextField SEARCH;
    private javax.swing.JButton SEARCHBUTTOM;
    private javax.swing.JButton STATISTIC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
